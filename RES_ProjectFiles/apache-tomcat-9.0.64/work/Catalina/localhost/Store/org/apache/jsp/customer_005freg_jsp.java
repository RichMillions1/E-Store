/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-08-11 14:42:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class customer_005freg_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1098682424000L));
    _jspx_dependants.put("jar:file:/D:/Program%20Files/apache-tomcat-9.0.64/webapps/Store/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098682290000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Customer Registration</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/public.css\">\r\n");
      out.write("    <style type=\"text/css\">\r\n");
      out.write("        table {\r\n");
      out.write("            border-collapse: collapse;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .boder {\r\n");
      out.write("            border: 1px solid #5B96D0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .col1 {\r\n");
      out.write("            background-color: #A6D2FF;\r\n");
      out.write("            text-align: right;\r\n");
      out.write("            padding-right: 10px;\r\n");
      out.write("            border: 1px solid #5B96D0;\r\n");
      out.write("            line-height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .col2 {\r\n");
      out.write("            padding-left: 10px;\r\n");
      out.write("            border: 1px solid #5B96D0;\r\n");
      out.write("            line-height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .textfield {\r\n");
      out.write("            height: 20px;\r\n");
      out.write("            width: 200px;\r\n");
      out.write("            border: 1px solid #999999;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            font-size: medium;\r\n");
      out.write("            line-height: 50px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("\r\n");
      out.write("  <script>\r\n");
      out.write("    function verify(myform){\r\n");
      out.write("      var errorMsg = \"\";\r\n");
      out.write("      if (myform.userid.value == \"\") {\r\n");
      out.write("        errorMsg += \"The account cannot be empty!\\n\";\r\n");
      out.write("      }\r\n");
      out.write("      if (myform.name.value == \"\") {\r\n");
      out.write("        errorMsg += \"The name cannot be empty!\\n\";\r\n");
      out.write("      }\r\n");
      out.write("      if (myform.password.value != myform.password2.value) {\r\n");
      out.write("        errorMsg += \"The password entered does not match!\\n\";\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      var pattern = /^((((19|20)(([02468][048])|([13579][26]))-02-29))|((20[0-9][0-9])|(19[0-9][0-9]))-((((0[1-9])|(1[0-2]))-((0[1-9])|(1\\d)|(2[0-8])))|((((0[13578])|(1[02]))-31)|(((0[1,3-9])|(1[0-2]))-(29|30)))))$/;\r\n");
      out.write("\r\n");
      out.write("      if (!pattern.test(myform.birthday.value)) {\r\n");
      out.write("        errorMsg += \"Invalid date of birth format!\\n\";\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      if (errorMsg == \"\") {\r\n");
      out.write("        return true;\r\n");
      out.write("      } else {\r\n");
      out.write("        alert(errorMsg);\r\n");
      out.write("        return false;\r\n");
      out.write("      }\r\n");
      out.write("    }\r\n");
      out.write("  </script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div><img src=\"images/Logo1.png\" align=\"center\" /></div>\r\n");
      out.write("<br>\r\n");
      out.write("<hr width=\"100%\" />\r\n");
      out.write("<div class=\"text3\" align=\"center\">Please complete the following information</div>\r\n");
      out.write("<br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<ul>\r\n");
      out.write("  ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("<form action =\"controller\" method=\"post\" onsubmit=\"return verify(this)\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <table width=\"60%\" border=\"0\" align=\"center\" class=\"boder\">\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td width=\"35%\" height=\"27\" class=\"col1\">Account Number:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"text\" name=\"userid\" />*</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Full Name:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"text\" name=\"name\" />*</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Password:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"password\" name=\"password\" />*</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Re-enter the password:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"password\" name=\"password2\" />*</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Date of Birth:</td>\r\n");
      out.write("        <td  class=\"col2\"><input type=\"text\" name=\"birthday\" />*\r\n");
      out.write("          Format（YYYY-MM-DD）</td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Address:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"text\" name=\"address\"  /></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <td height=\"27\" class=\"col1\">Phone number:</td>\r\n");
      out.write("        <td class=\"col2\"><input type=\"text\" name=\"phone\"   /></td>\r\n");
      out.write("      </tr>\r\n");
      out.write("    </table>\r\n");
      out.write("<br>\r\n");
      out.write("    <div align=\"center\">\r\n");
      out.write("      <input type=\"image\" src=\"images/submit_button.png\" />\r\n");
      out.write("    </div>\r\n");
      out.write("    <input type=\"hidden\" name=\"action\" value=\"reg\" >\r\n");
      out.write("</form>\r\n");
      out.write("  <div class=\"footer\">\r\n");
      out.write("    <hr  width=\"100%\" />\r\n");
      out.write("   © RES Online 2022 © </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /customer_reg.jsp(80,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("error");
      // /customer_reg.jsp(80,2) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errors}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("      <li class=\"error\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${error}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</li>\r\n");
            out.write("  ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
